如果程序烧写在nand flash或者sram位置，在程序里面要有从sram拷贝程序到sdram的功能，接下来就是在加载文件lds里面指定程序的应该运行地址。
因此如果程序有ldr pc,=main指令，则pc会跳转到的是sdram的地址，而非sram了。
因为在lds文件中已经指定其应该运行的位置了。
如果是通过jlink第一次下载程序的0x0后，此时要让其运行一遍，以实现初始化sdram功能。之后就可以跳转到0x30000000位置，与跳转到0x0功能是一样的。(前提是sram内容复制到0x30000000处。)


关于在sram复制代码到sdram：(没有mmu时候)
可以复制任意sram位置的代码至sdram指定位置，假设主函数是在lds文件中设置为second段的。
假设复制sram中a地址内容到sdram中b地址，然后再lds文件中指定主函数应该运行的位置为c地址，在sram中的相对偏移为d,即AT(d)，那么，这些地址存至以下关系：
c = b+d-a;   
a<=d;
b<=c;


关于lds文件中的应该运行位置：
我觉得应该是：
一开始会编译所有文件，之后按照地址要求先链接first段的内容，再接下来才安排second段的内容在指定地址。
但说白了这些其实只是软件做的事，硬件上实际是在应该运行地址的时候让其跳转到特定地址去。
就拿一个从sram复制代码到sdram并跳转的程序而言，实际上它就是：
1.复制
2.根据应该运行地址跳转pc指针，但在sram中仍有源码，只是因为你是有指定运行地址。
